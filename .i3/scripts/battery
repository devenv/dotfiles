#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.
#
# Modified by Raphael. Ribeiro <raphaelpr01@gmail.com>

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;

# read the first line of the "acpi" command output
open (ACPI, 'acpi -b |') or die "Can't exec acpi: $!\n";
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
  die "$acpi\n";
}

$status = $1;
$percent = $2;
$full_text = "$percent%";

my $full = "" ;
my $almost_full = "" ;
my $half = "" ;
my $almost_empty = "" ;
my $empty = "" ;

if ($status eq 'Discharging' or $status eq 'Charging') {
  if ($percent > 75) {
    $full_text = $full . '  ' . $full_text ;
  } elsif ($percent > 50) {
    $full_text = $almost_full . '  ' . $full_text ;
  } elsif ($percent > 25) {
    $full_text = $half . '  ' . $full_text ;
  } else {
    $full_text = $empty . '  ' . $full_text ;
  }
} elsif ($status eq 'Full') {
  $full_text = '   ' . $full_text ;
}

$short_text = $full_text;

if ($acpi =~ /(\d\d:\d\d):/) {
    $full_text .= " ($1)";
}

# print text
print "$full_text\n";
print "$short_text\n";

# consider color and urgent flag only on discharge
if ($status eq 'Discharging') {
  if ($percent < 20) {
    print "#FA827C\n";
  } elsif ($percent < 40) {
    print "#FFB956\n";
  } elsif ($percent < 60) {
    print "#FAF87C\n";
  } elsif ($percent <= 100) {
    print "#8AFF92\n";
  }

  if ($percent < 5) {
    exit(33);
  }
} else {
  print "#5CCFFD\n";
}

exit(0);

